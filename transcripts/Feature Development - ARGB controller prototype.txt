A feature development of the first ARGB controller prototype.So the most important thing got out of the way first.This is, um...Sorry, with the sound card thing out of the way, this was the first and kind of only real feature device that I needed to know was actually practical and testable and prototypable before I moved on with anything else.So, for context, these ARGB devices that I had in my PC case utilize a 3-pin header.Actually, let me start that again.So key point here, enter, enter.Even though the sort of manufacturer software ecosystems built up around these ARGB devices was a bit, not necessarily complex, but complicated and headache-inducing, the actual hardware was extremely simple.So 3-pin header with a single data line.So in the sort of natural hacky spirit, I thought, well, okay, can an Arduino output whatever the heck these devices are expecting on that data line? You know, if an Arduino can output a PWM signal or a serial output or whatever on a single pin, can we do it for these devices? For that matter, what kind of LEDs are even in these devices? These are computer fans.Are they the same as other devices? Is there already something specific for it? That kind of thing.So I set out looking on the Arduino ecosystem and very quickly came across FastLED, which is one of a few different libraries that are clearly oriented towards ARGB strips.Key point, enter, enter.Very quickly came up with the answer that yes, Arduino and other sort of prototyping devices do have libraries that are compatible with ARGB LED devices, but they're mostly oriented at ARGB LED strips, the kind you see on Amazon, people put all around their apartment and all that crap and off you go.A bit more specifically, and this comes back later, while the libraries are designed for strips, they differentiate different strips not so much by the manufacturer, but rather by the chipset, the kind of controller that's built into the strips themselves.So while it was fairly easy to determine whether a particular ARGB strip used that kind of chipset because that is generally included, there was obviously no information like that incorporated into, what do you call it? There's no information like that incorporated into the manufacturer specs for these PC ARGB devices because they're just not meant for that use.They don't want you to do that.So you clearly didn't expect anyone to ask.So I took a bump.I took a guess, I figured out what was the most common chipset for ARGB strips.I took a guess that these ARGB fan devices would be similar.And what do you know? They are.Very first chipset and it works.Some issues emerge very quickly, which we'll get to, but the point was with that first prototype it was done and it clearly worked.And with that, the whole project, I guess, passed the feasibility test.So that was really good.Key point here, color, direct control and temperature control also passed the feasibility test very quickly.Once I found that the library did actually work and I explored the function a bit more, I found that actually very quickly the color control itself within the library can be organized based on HSV values.So that's hue saturation value.For those who aren't familiar, HSV, we're working from the back, value is just overall brightness.Maxim is the color saturation where zero means it's just entirely white and full saturation means it's like a deep red, deep green.Whenever you have its maximum color and then hue is the position around the color.So red is zero and green is 96, if I remember correctly, and so on up to 255, which is just red again.And while it might not seem intuitive, it actually ends up being a much nicer color space to work with when you're trying to set specific colors because you're not worrying so much about, well, if I want to go from yellow to orange, do I add green? Do I add red? When you're trying to balance the three RGB and figure out how do I traverse this map? It wasn't really like that.It was more just like, oh, you want to go from red to green or you just sweep the hue value from zero to 96.If you don't have any specific colors that you want to go through, then it just transitions very naturally from red to yellow to orange to green, like you would expect.It's like a rainbow.So that's very nice.And while, so that's first key or key point and color control very easy.Enter, enter.Another key point, temperature control turned out to be quite easy to do.And that's because of that HSV space.Obviously trying to do it and I looked at blog posts and almost like white papers on developing algorithms to go from RGB space to color temperature space, that kind of thing.And it was very complicated and it depended a lot on the exact color output and performance of your hardware and all that stuff.So I decided to just roll my own kind of using an intuitive naive approach and it actually really worked.I guess because the starting and ending points of the temperature suite were very clear.The starting point at maximum temperature is just white.So no matter what your hue is, you're just looking at zero saturation and you'll be white, guaranteed.And then the end point was just a nice warm orange, which is basically just maximum saturation and orange, whatever the hue value for orange is.I think it's five or 10 or 35, something like that.So the naive approach as well, what if I just sweep the saturation from starting at zero and going to max and at the same time, sweep the hue value where it starts at a kind of yellow, which would mimic that sort of cool white, but not quite white that you get from like Bunnings style LED lamps, that kind of thing.That sort of yellowy, kind of off-white color.And then sweep it down to orange.So as you decrease the color temperature, the intensity of the color comes in at the same time as you're sweeping from yellow to orange.And so what you end up getting is it starts at white, as you start to bleed the color in, you see a bit of yellow, but you're already transitioning towards the orange.And then by the time the saturation reaches max, well, you're at orange and that's just a nice warm orange.So that was a naive approach and it worked pretty much straight away.And I'm using a very similar kind of curve to this day.It's the kind of thing I can work on, but it's also the kind of thing I can work on in software, once it's all keyed up.So I quickly moved on to the rest of the functionality once that core bit of it was there.