All right, feature development PC app based volume control.This is a bit of a funky one because I developed this and then I sort of came back and redeveloped it after everyone else replied and it broke and then I got to work in a different way.So anyway, key point, enter, enter.Short version, there's a Python library for that.Nice, enter, enter.Expanding on that key point a bit.Yes, I'm Googling and I'm gonna use the chat GPT.Landing me on the PyCore library.It's an audio utility library that allows you to control sort of OS level audio utility.As mentioned, audio functions of Windows from a Python script.In particular, it has a functionality where you can get a listable active audio sessions and their information, including their executable name and then send individual volume commands.There's also a way to, this is where I got to know, there's a way to, there is a method for doing like writing to the overall volume output, which is the one when you use your volume knob in PC, you see Windows pops up the volume and that was working, but then that broke.So I won't go into how it was working.The point is there's an option to set each individual app, set each individual app volume.And then on top of that, I'm just using the main volume knob as a kind of multiplier on top of that.So if you set it to 50, all the apps will be set to 50.And then if you set the individual one down to 50 as well, it'll be on 25.This has a few interesting quirks.Originally I had it set up so that the main overall Windows volume was set by the main knob.And that was good in that sort of a direct control versus the sort of indirect method of setting volume apps and then setting them again.So the cons of this method is it means that effectively you have to make sure the Windows volume is up at 100% and then from there you scale all the apps.So if you want your app at 25%, you have to set Windows to 100% manually, not using the control panel.Then you set the main volume to 50 say, and then the app volume at 50, and you end up with 25% overall.Of course, if you then grab yet another volume control, like the one on my keyboard, and scale it down again, then scale the Windows volume down 50% and then end up with an app volume of 4.5%.So that, I mean, it seems like a con.It actually works out okay.It is, you know, it becomes sort of very habitual and just, you know, once I power up the thingy things, the control panel will just quickly, you know, nip the Windows volume up to 100% and off you go.I suppose I could possibly automate that, but if I can automate that, then I should be able to control that.What was I gonna say? Yeah, and to be honest, I think one of the cons of having it the other way, or rather the pro of not having direct access to the Windows overall volume is that when I was running the PC control panel, it actually locked the volume to whatever the value of the main volume was, even if that value was incorrect.You know, if the knob got disconnected, it would just go straight to zero, some random value and blare as speakers at me.And I guess this way, even though you sort of have that additional step of making sure the volume is maxed out, I've actually found still having control over the Windows volume through other methods, like my mouse or even just, sorry, my keyboard, or even just connecting it, controlling it through the OS directly, that's actually been handy, especially for debug.As a software feature, it's something I might look back into a bit later, but for now it works perfectly fine and it's a little bit more flexible at the expense of a bit of, I guess, efficiency.Yeah, but I mean, in summary, the actual feature itself, super, super good.It's relative, there's a bit of a process for adding new functionality.Basically, the script itself has three sort of groups.And then once you, what do you call it? Script itself has three groups that apps can be associated with.If you want to add an app, you just have to open up Task Manager and determine what the actual XC file name for it is, which is noise intuitive.Take a look at Insurgency Sandstorm, for instance.But once that's in, it will basically just sweep through all of the registered apps, check they're there in the active audio sessions.And if they are, adjust their volume accordingly based on which volume knob is assigned to it.Let's see, key point, flexible programming, relatively straightforward.Enter, enter, new key point, enter, enter.Really enjoyable audio live functionality to have.Very quickly got used to having this feature, the ability to rapidly sound balance voice in game chat, for instance, is really, really nice.Being able to also sort of adjust music volume, that kind of thing, again, just really nice.It's not a game changer, but then again, it's kind of exactly what this controller is for.It's a very personalized, nice to have unit.It's a nice to have unit for controlling nice to haves.And for that, it's really nice to have.