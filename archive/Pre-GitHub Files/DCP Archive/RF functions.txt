
void RF_functions() {
    RF
    static uint32_t good;
    static uint32_t invalids;
    static uint32_t badData;
    Atomically copy volatile global variable to local: the radio is still in RX mode and another packet could come in at any moment
    noInterrupts();
    uint8_t pktStatus = packetStatus;
    packetStatus = PACKET_NONE;
    interrupts();
    if(pktStatus == PACKET_NONE) {
        Serial.println("RADIO: No packet.");
    }
    else if (pktStatus == PACKET_INVALID) {
        Serial.println("RADIO: Invalid packet.");
        invalids++;
    }
    else {
        Serial.println("RADIO: Received valid packet.");
        Make buffer for data
        uint8_t buffer[PAYLOAD_SIZE];
        Read payload
        transceiver.read(buffer, sizeof(buffer));
        Show received data
        Serial.print(F("RADIO: Data received: "));
        for (uint8_t i = 0; i < PAYLOAD_SIZE; i++) {
            Serial.print(F(" "));
            Serial.print(buffer[i], DEC);
        }
        Serial.println();
        Not sure what this part is doing exactly, I'll see what it prints out
        Serial.print(F("Analog values: "));
		Serial.print(buffer[4]<<8 | buffer[5]);
		Serial.print(F(" "));
		Serial.print(buffer[6]<<8 | buffer[7]);
		Serial.print(F(" "));
		Serial.println(buffer[8]<<8 | buffer[9]);
		Serial.print(F("Digital values: "));
		Serial.print(buffer[1]);
		Serial.print(F(" "));
		Serial.print(buffer[2]);
		Serial.print(F(" "));
		Serial.println(buffer[3]);
        good++;
    }
    Serial.print(F("Totals: Good "));
	Serial.print(good);
	Serial.print(F(" Invalid "));
	Serial.print(invalids);
	Serial.print(F(" Bad     "));
	Serial.println(badData);
	Serial.flush();
}